<div class="accordion beginning" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne"
                aria-expanded="true" aria-controls="collapseOne">
                Studi Kasus
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <strong>Implementasi Metode TOPSIS Untuk Menentukan
                    Karyawan Terbaik Berbasis Web Pada CV. Bima Eka Raya Teknik</strong>
                <br>
                <a>Dalam penentuan karyawan terbaik menjadi hal yang sulit bagi setiap perusahaan
                    dikarenakan dalam melakukan penilaian harus berlandaskan kepada kriteria yang telah
                    disetujui oleh masing-masing perusahaan. Banyak ditemukan pada saat penentuan karyawan
                    terbaik kendala yang dialami adalah melakukan penilaian absensi saja tanpa melihat kriteria-
                    kriteria lain yang ada. Permasalahan pada CV. Bima Eka Raya Teknik adalah sulitnya
                    pengambilan keputusan yang dilakukan secara manual mengingat setiap individu memiliki
                    kepentingan sendiri dalam mengisi penilaian terhadap karyawan. Oleh sebab tersebut
                    dibutuhkan sistem yang terkomputerisasi sehingga mampu menentukan karyawan terbaik
                    menggunakan metode TOPSIS (Technique for Order Preference by Similarity to Ideal Solution)
                    untuk melakukan pemeringkatan alternatif-alternatif mana yang memiliki nilai tertinggi sehingga
                    dapat digunakan oleh perusahaan untuk memberikan hadiah atau kenaikan jabatan kepada
                    karyawan terpilih dari hasil penilaian yang diberikan oleh sistem perusahaan.</a>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                Metode Topsis
            </button>
        </h2>
        <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <strong> TOPSIS Atau Technique for Order Preference by Similarity to Ideal Solution. </strong>
                <br>
                <a>Metode pengambilan keputusan multikriteria yang dikembangkan oleh Hwang dan Yoon pada
                    tahun 1981.
                    Metode yang di pakai TOPSIS didasarkan pada ide untuk memilih alternatif yang memiliki jarak
                    terdekat dengan solusi ideal positif dan jarak terjauh dengan solusi ideal negatif.</a>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                Tahapan Topsis
            </button>
        </h2>
        <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <strong>Menentukan matriks keputusan (X) yang berisi nilai-nilai dari setiap alternatif pada setiap
                    kriteria.</strong>
                <ul>
                    <li>Identifikasi kriteria yang relevan untuk evaluasi alternatif.</li>
                    <li>Berikan bobot pada setiap kriteria sesuai dengan tingkat kepentingannya.</li>
                    <li>Nilai-nilai alternatif di setiap kriteria dimasukkan ke dalam matriks keputusan.</li>
                </ul>
                <strong>Normalisasi matriks keputusan:</strong>
                <ul>
                    <li>Normalisasi dilakukan untuk menghilangkan dampak dari perbedaan skala antara kriteria.</li>
                    <li>Setiap elemen dalam matriks keputusan dibagi dengan akar kuadrat dari jumlah kuadrat setiap
                        kolom.</li>
                    <div class="math-display">
                        \[
                        R_{ij} = \frac{{x_{ij}}}{{\sqrt{{\sum_{i=1}^{n} x_{ij}^2}}}}
                        \]
                    </div>
                    <ul>
                        <li>\(R_{ij}\) adalah nilai ternormalisasi dari alternatif ke-\(i\) pada kriteria ke-\(j\),
                        </li>
                        <li>\(x_{ij}\) adalah nilai dari alternatif ke-\(i\) pada kriteria ke-\(j\), dan</li>
                        <li>\(n\) adalah jumlah alternatif.</li>
                    </ul>
                </ul>
                <strong>Membuat matriks keputusan ternormalisasi terbobot:</strong>
                <ul>
                    <li>Setiap elemen dalam matriks keputusan ternormalisasi dikalikan dengan bobot yang sesuai
                        untuk kriteria tersebut.</li>
                    <div class="math-display">
                        \[
                        R_{ij} = x_{ij} \cdot w_j
                        \]
                    </div>

                    <p>di mana:</p>
                    <ul>
                        <li>\(R_{ij}\) adalah nilai dari alternatif ke-\(i\) pada kriteria ke-\(j\) setelah
                            ternormalisasi terbobot,</li>
                        <li>\(x_{ij}\) adalah nilai dari alternatif ke-\(i\) pada kriteria ke-\(j\),</li>
                        <li>\(w_j\) adalah bobot dari kriteria ke-\(j\).</li>
                    </ul>

                </ul>
                <strong>Menghitung solusi ideal positif (A+) dan solusi ideal negatif (A-):</strong>
                <ul>
                    <li>Solusi ideal positif (A+) adalah vektor yang terdiri dari nilai maksimum untuk setiap
                        kriteria.</li>
                    <div class="math-display">
                        \[
                        A_j^+ = \max(R_{ij}) \quad \text{untuk } j = 1, 2, \ldots, m
                        \]
                    </div>
                    <ul>
                        <li>\(A_j^+\) adalah nilai maksimum dari semua alternatif pada kriteria ke-\(j\),</li>
                        <li>\(A_j^-\) adalah nilai minimum dari semua alternatif pada kriteria ke-\(j\), dan</li>
                        <li>\(m\) adalah jumlah kriteria.</li>
                    </ul>
                    <li>Solusi ideal negatif (A-) adalah vektor yang terdiri dari nilai minimum untuk setiap
                        kriteria.</li>

                    <div class="math-display">
                        \[
                        A_j^- = \min(R_{ij}) \quad \text{untuk } j = 1, 2, \ldots, m
                        \]
                    </div>
                    <ul>
                        <li>\(A_j^+\) adalah nilai maksimum dari semua alternatif pada kriteria ke-\(j\),</li>
                        <li>\(A_j^-\) adalah nilai minimum dari semua alternatif pada kriteria ke-\(j\), dan</li>
                        <li>\(m\) adalah jumlah kriteria.</li>
                    </ul>

                </ul>
                <strong>Menghitung jarak antara setiap alternatif dengan solusi ideal positif (D+) dan solusi ideal
                    negatif (D-):</strong>
                <ul>
                    <li>Jarak Euclidean dihitung antara setiap alternatif dengan A+ dan A-.</li>
                    <li>Jarak D+ adalah jarak antara alternatif ke A+.</li>
                    <div class="math-display">
                        \[
                        D_i^+ = \sqrt{{\sum_{j=1}^{m} (R_{ij} - A_j^+)^2}}
                        \]
                    </div>
                    <ul>
                        <li>\(D_i^+\) adalah jarak antara alternatif ke-\(i\) dengan matriks solusi ideal positif,
                        </li>
                        <li>\(D_i^-\) adalah jarak antara alternatif ke-\(i\) dengan matriks solusi ideal negatif,
                            dan</li>
                        <li>\(m\) adalah jumlah kriteria.</li>
                    </ul>
                    <li>Jarak D- adalah jarak antara alternatif ke A-.</li>


                    <div class="math-display">
                        \[
                        D_i^- = \sqrt{{\sum_{j=1}^{m} (R_{ij} - A_j^-)^2}}
                        \]
                    </div>
                    <ul>
                        <li>\(D_i^+\) adalah jarak antara alternatif ke-\(i\) dengan matriks solusi ideal positif,
                        </li>
                        <li>\(D_i^-\) adalah jarak antara alternatif ke-\(i\) dengan matriks solusi ideal negatif,
                            dan</li>
                        <li>\(m\) adalah jumlah kriteria.</li>
                    </ul>
                </ul>
                <strong>Menghitung skor preferensi relatif:</strong>
                <ul>
                    <li>Skor preferensi relatif (V) dihitung sebagai rasio antara jarak D- dengan jumlah jarak D+
                        dan D-.</li>
                    <div class="math-display">
                        \[
                        V_i = \frac{{D_i^-}}{{D_i^+ + D_i^-}}
                        \]
                    </div>
                    <ul>
                        <li>\(V_i\) adalah nilai preferensi dari alternatif ke-\(i\).</li>
                    </ul>
                </ul>
                <strong>Merangking alternatif:</strong>
                <ul>
                    <li>Alternatif dengan skor preferensi relatif tertinggi dianggap sebagai pilihan terbaik.
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>